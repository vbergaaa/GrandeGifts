// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RyanGrandeGifts.Services;

namespace RyanGrandeGifts.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20190515125304_asp.netRoles")]
    partial class aspnetRoles
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RyanGrandeGifts.Models.Address", b =>
                {
                    b.Property<string>("AddressId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("CustomerId");

                    b.Property<string>("PostCode");

                    b.Property<int>("State");

                    b.Property<string>("StreetName");

                    b.Property<int>("StreetNumber");

                    b.Property<string>("Suburb");

                    b.Property<int?>("UnitNumber");

                    b.HasKey("AddressId");

                    b.HasIndex("CustomerId");

                    b.ToTable("TblAddress");
                });

            modelBuilder.Entity("RyanGrandeGifts.Models.Category", b =>
                {
                    b.Property<string>("CategoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryDescription");

                    b.Property<string>("CategoryName");

                    b.HasKey("CategoryId");

                    b.ToTable("TblCategory");
                });

            modelBuilder.Entity("RyanGrandeGifts.Models.Customer", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("RyanGrandeGifts.Models.Feedback", b =>
                {
                    b.Property<string>("FeedbackId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FeedbackMessage");

                    b.Property<string>("FeedbackTitle");

                    b.Property<string>("HamperOrderId");

                    b.Property<int>("Rating");

                    b.HasKey("FeedbackId");

                    b.HasIndex("HamperOrderId")
                        .IsUnique()
                        .HasFilter("[HamperOrderId] IS NOT NULL");

                    b.ToTable("TblFeedback");
                });

            modelBuilder.Entity("RyanGrandeGifts.Models.Hamper", b =>
                {
                    b.Property<string>("HamperId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CategoryId");

                    b.Property<string>("HamperDescription");

                    b.Property<string>("HamperName");

                    b.Property<double>("HamperPrice");

                    b.HasKey("HamperId");

                    b.HasIndex("CategoryId");

                    b.ToTable("TblHamper");
                });

            modelBuilder.Entity("RyanGrandeGifts.Models.HamperOrder", b =>
                {
                    b.Property<string>("HamperOrderId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("HamperId");

                    b.Property<string>("OrderId");

                    b.Property<int>("Quantity");

                    b.HasKey("HamperOrderId");

                    b.HasIndex("HamperId");

                    b.HasIndex("OrderId");

                    b.ToTable("TblHamperOrder");
                });

            modelBuilder.Entity("RyanGrandeGifts.Models.Order", b =>
                {
                    b.Property<string>("OrderId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CustomerId");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("TblOrder");
                });

            modelBuilder.Entity("RyanGrandeGifts.Models.Picture", b =>
                {
                    b.Property<string>("PictureId")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ContentSize");

                    b.Property<string>("ContentType");

                    b.Property<byte[]>("FileContent");

                    b.Property<string>("FileName");

                    b.Property<string>("HamperId");

                    b.HasKey("PictureId");

                    b.HasIndex("HamperId")
                        .IsUnique()
                        .HasFilter("[HamperId] IS NOT NULL");

                    b.ToTable("TblPicture");
                });

            modelBuilder.Entity("RyanGrandeGifts.Models.Address", b =>
                {
                    b.HasOne("RyanGrandeGifts.Models.Customer", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("RyanGrandeGifts.Models.Feedback", b =>
                {
                    b.HasOne("RyanGrandeGifts.Models.HamperOrder", "HamperOrder")
                        .WithOne("Feedback")
                        .HasForeignKey("RyanGrandeGifts.Models.Feedback", "HamperOrderId");
                });

            modelBuilder.Entity("RyanGrandeGifts.Models.Hamper", b =>
                {
                    b.HasOne("RyanGrandeGifts.Models.Category", "Category")
                        .WithMany("Hampers")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("RyanGrandeGifts.Models.HamperOrder", b =>
                {
                    b.HasOne("RyanGrandeGifts.Models.Hamper", "Hamper")
                        .WithMany("HamperOrders")
                        .HasForeignKey("HamperId");

                    b.HasOne("RyanGrandeGifts.Models.Order", "Order")
                        .WithMany("HamperOrders")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("RyanGrandeGifts.Models.Order", b =>
                {
                    b.HasOne("RyanGrandeGifts.Models.Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("RyanGrandeGifts.Models.Picture", b =>
                {
                    b.HasOne("RyanGrandeGifts.Models.Hamper", "Hamper")
                        .WithOne("Picture")
                        .HasForeignKey("RyanGrandeGifts.Models.Picture", "HamperId");
                });
#pragma warning restore 612, 618
        }
    }
}
